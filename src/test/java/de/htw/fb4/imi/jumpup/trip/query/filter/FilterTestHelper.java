/**
 * JumpUp.Me Car Pooling Application
 *
 * Copyright (c) 2014-2015 Sebastian Renner, Marco Seidler, Sascha Feldmann
 */
package de.htw.fb4.imi.jumpup.trip.query.filter;

import de.htw.fb4.imi.jumpup.trip.ajax.model.TripSearchCriteria;
import de.htw.fb4.imi.jumpup.trip.entity.Trip;
import de.htw.fb4.imi.jumpup.util.math.Coordinates;

/**
 * <p></p>
 *
 * @author <a href="mailto:me@saschafeldmann.de">Sascha Feldmann</a>
 * @since 24.01.2015
 *
 */
public class FilterTestHelper
{
    public static Coordinates BERLIN = new Coordinates(52.52f, 13.405f);
    public static Coordinates LEIPZIG = new Coordinates(51.3398f, 12.373f);
    public static Coordinates ERFURT = new Coordinates(50.9849f, 11.0298f);
    public static Coordinates WEIMAR = new Coordinates(50.9795f, 11.3235f);
    public static Coordinates TRIER = new Coordinates(49.75f, 6.63714f);


    public static Trip getTripFromBerlinToLeipzig()
    {
        Trip trip = new Trip();
        
        trip.setStartpoint("Berlin, Deutschland");
        trip.setLongStartpoint(BERLIN.getLongitudeDegrees());
        trip.setLatStartpoint(BERLIN.getLatitudeDegrees());
        
        trip.setEndpoint("Leipzig, Deutschland");
        trip.setLongEndpoint(LEIPZIG.getLongitudeDegrees());
        trip.setLatEndpoint(LEIPZIG.getLatitudeDegrees());
        
        trip.setOverViewPath("52.520030000000006,13.40497;52.517050000000005,13.38724;52.51583,13.369800000000001;52.514790000000005,13.35368;52.51277,13.323120000000001;52.511010000000006,13.296270000000002;52.510090000000005,13.28179;52.46723000000001,13.233960000000002;52.43789,13.19687;52.419070000000005,13.196240000000001;52.38975000000001,13.15736;52.34431000000001,13.140740000000001;52.33113,13.11429;52.300610000000006,13.07759;52.30077000000001,13.064430000000002;52.30127,13.04902;52.29843,13.032630000000001;52.30221,13.018220000000001;52.303540000000005,13.003940000000002;52.30377000000001,12.983250000000002;52.29252,12.92675;52.24416,12.915450000000002;52.19223,12.85992;52.176860000000005,12.835320000000001;52.169180000000004,12.80765;52.16377000000001,12.78912;52.14247,12.763330000000002;52.124390000000005,12.742540000000002;52.111610000000006,12.715050000000002;52.09964,12.697610000000001;52.08661000000001,12.67595;52.06633000000001,12.65596;52.0444,12.632060000000001;52.03262,12.61303;52.02506,12.59908;52.016420000000004,12.58013;52.006420000000006,12.563350000000002;51.994060000000005,12.54667;51.985820000000004,12.533240000000001;51.980380000000004,12.518350000000002;51.97256,12.49276;51.96904000000001,12.48107;51.961400000000005,12.46452;51.92978,12.44593;51.91313,12.432690000000001;51.904340000000005,12.415080000000001;51.88983,12.40093;51.874660000000006,12.386980000000001;51.868550000000006,12.3741;51.863690000000005,12.36087;51.856640000000006,12.34462;51.85114,12.333390000000001;51.8348,12.320620000000002;51.81748,12.304170000000001;51.80765,12.28964;51.79182,12.274540000000002;51.77747,12.260700000000002;51.76729,12.241700000000002;51.75831,12.232500000000002;51.741510000000005,12.220170000000001;51.71831,12.21419;51.69581,12.209900000000001;51.65979,12.203080000000002;51.64367000000001,12.199710000000001;51.61229,12.1872;51.59906,12.182970000000001;51.570640000000004,12.189670000000001;51.55559,12.18786;51.51775000000001,12.19716;51.4986,12.201960000000001;51.470510000000004,12.215750000000002;51.45573,12.214200000000002;51.433670000000006,12.201500000000001;51.426730000000006,12.19701;51.42694,12.196000000000002;51.42793,12.19547;51.42152,12.242450000000002;51.41639000000001,12.281;51.41501,12.311230000000002;51.41424000000001,12.33661;51.41297,12.34947;51.408240000000006,12.37602;51.40532,12.38624;51.375930000000004,12.391150000000001;51.362550000000006,12.399450000000002;51.342180000000006,12.369280000000002;51.33977,12.373040000000001;");
        
        
        return trip;
    }

    public static Trip getTripFromBerlinToTrier()
    {
        Trip trip = new Trip();
        
        trip.setStartpoint("Berlin, Deutschland");
        trip.setLongStartpoint(BERLIN.getLongitudeDegrees());
        trip.setLatStartpoint(BERLIN.getLatitudeDegrees());
        
        trip.setEndpoint("Trier, Deutschland");
        trip.setLongEndpoint(TRIER.getLongitudeDegrees());
        trip.setLatEndpoint(TRIER.getLatitudeDegrees());
        
        trip.setOverViewPath("52.520030000000006,13.40497;52.511010000000006,13.296270000000002;52.4461,13.207230000000001;52.42380000000001,13.194700000000001;52.412850000000006,13.197320000000001;52.34431000000001,13.140740000000001;52.310900000000004,13.090560000000002;52.30221,13.018220000000001;52.30353,12.975190000000001;52.24416,12.915450000000002;52.23087,12.91524;52.19614000000001,12.875330000000002;52.124390000000005,12.742540000000002;52.052020000000006,12.646030000000001;51.985820000000004,12.533240000000001;51.91313,12.432690000000001;51.868550000000006,12.3741;51.773990000000005,12.254180000000002;51.741510000000005,12.220170000000001;51.69581,12.209900000000001;51.632180000000005,12.195430000000002;51.61229,12.1872;51.58838,12.186850000000002;51.56175,12.18721;51.531690000000005,12.1965;51.50704,12.199720000000001;51.48171000000001,12.212420000000002;51.46054,12.216120000000002;51.433670000000006,12.201500000000001;51.393730000000005,12.18045;51.34731000000001,12.186520000000002;51.305260000000004,12.153260000000001;51.2832,12.125900000000001;51.23854000000001,12.06047;51.196560000000005,12.016570000000002;51.12794,11.961030000000001;51.05576000000001,11.946980000000002;50.98987,11.91;50.962320000000005,11.855250000000002;50.93549,11.836110000000001;50.89818,11.843520000000002;50.88049,11.843110000000001;50.87791000000001,11.67556;50.880340000000004,11.61593;50.87881,11.53124;50.881780000000006,11.489;50.90646,11.4219;50.9318,11.389030000000002;50.938100000000006,11.34478;50.950430000000004,11.22752;50.89256,10.936240000000002;50.892900000000004,10.89611;50.88778000000001,10.768120000000001;50.90158,10.728520000000001;50.90487,10.673860000000001;50.90632,10.611600000000001;50.91713000000001,10.577160000000001;50.92237,10.52532;50.94261,10.48967;50.96802,10.48901;50.9806,10.481940000000002;50.989270000000005,10.460840000000001;51.012330000000006,10.38396;51.01522000000001,10.3237;51.011700000000005,10.15637;51.016670000000005,10.117170000000002;50.97966,10.07052;50.94509000000001,9.943240000000001;50.89640000000001,9.85848;50.85197,9.694830000000001;50.84774,9.63316;50.78369000000001,9.420240000000002;50.752410000000005,9.30211;50.71168,9.153350000000001;50.71461000000001,9.107240000000001;50.71716000000001,9.08286;50.68077,9.03144;50.65495000000001,9.01247;50.63282,8.925320000000001;50.6114,8.829410000000001;50.629020000000004,8.79151;50.63505000000001,8.73304;50.62127,8.674320000000002;50.59443,8.65564;50.575610000000005,8.645980000000002;50.57104,8.559660000000001;50.55852,8.46752;50.54845,8.38399;50.545280000000005,8.35147;50.526300000000006,8.28092;50.49222,8.175320000000001;50.44874,8.10964;50.409090000000006,8.07639;50.404180000000004,8.01542;50.41261,7.96954;50.41393,7.933020000000001;50.43099,7.921880000000001;50.446400000000004,7.910940000000001;50.454640000000005,7.88442;50.445910000000005,7.818630000000001;50.44729,7.790520000000001;50.4553,7.776590000000001;50.458220000000004,7.759600000000001;50.450900000000004,7.722650000000001;50.444050000000004,7.6609300000000005;50.413250000000005,7.588030000000001;50.35154000000001,7.473120000000001;50.3348,7.41497;50.32403000000001,7.3689100000000005;50.315450000000006,7.33065;50.31438000000001,7.2985500000000005;50.29366,7.25586;50.24454,7.21654;50.217400000000005,7.125630000000001;50.220270000000006,7.109540000000001;50.23843,7.075360000000001;50.23969,7.052790000000001;50.22909000000001,7.007930000000001;50.20459,6.9679;50.17935000000001,6.89618;50.097060000000006,6.86763;50.073150000000005,6.875520000000001;50.064130000000006,6.89594;50.04619,6.9135100000000005;50.032180000000004,6.914490000000001;50.024860000000004,6.93576;49.99720000000001,6.927910000000001;49.93039,6.8715;49.90117000000001,6.853000000000001;49.87872,6.84074;49.812160000000006,6.7571900000000005;49.806540000000005,6.723540000000001;49.768530000000005,6.644120000000001;49.75119,6.62809;49.749990000000004,6.6371400000000005;");
        
        
        return trip;
    }
    
    public static Trip getTripFromLeipzigToErfurt()
    {
        Trip trip = new Trip();
        
        trip.setStartpoint("Leipzig, Deutschland");
        trip.setLongStartpoint(LEIPZIG.getLongitudeDegrees());
        trip.setLatStartpoint(LEIPZIG.getLatitudeDegrees());
        
        trip.setEndpoint("Erfurt, Deutschland");
        trip.setLongEndpoint(ERFURT.getLongitudeDegrees());
        trip.setLatEndpoint(ERFURT.getLatitudeDegrees());
        
        trip.setOverViewPath("51.33977,12.373040000000001;51.327740000000006,12.370140000000001;51.31436000000001,12.36162;51.31161,12.363890000000001;51.306380000000004,12.36687;51.30496,12.368150000000002;51.30227000000001,12.3726;51.300940000000004,12.374880000000001;51.29986,12.37593;51.298170000000006,12.37659;51.28725000000001,12.3786;51.28464,12.380700000000001;51.28229,12.382670000000001;51.280930000000005,12.383230000000001;51.26863,12.381310000000001;51.25574,12.38428;51.254250000000006,12.38513;51.253150000000005,12.386180000000001;51.25066,12.38963;51.24974,12.389920000000002;51.24817,12.320350000000001;51.25842,12.29246;51.262440000000005,12.261190000000001;51.238550000000004,12.20912;51.24044000000001,12.16262;51.23743,12.06624;51.22115,12.043320000000001;51.201570000000004,12.021020000000002;51.18652,12.00965;51.170350000000006,11.99835;51.15267000000001,11.98276;51.12794,11.961030000000001;51.11607000000001,11.95587;51.102050000000006,11.95569;51.08128000000001,11.955440000000001;51.070780000000006,11.954820000000002;51.05576000000001,11.946980000000002;51.04148000000001,11.941070000000002;51.028670000000005,11.93609;50.99631,11.916160000000001;50.985710000000005,11.90071;50.97430000000001,11.864090000000001;50.96338,11.85716;50.950500000000005,11.835840000000001;50.93549,11.836110000000001;50.92571,11.8389;50.921130000000005,11.84012;50.9162,11.84093;50.91082,11.841610000000001;50.89818,11.843520000000002;50.885580000000004,11.845720000000002;50.882760000000005,11.84557;50.876110000000004,11.802660000000001;50.868840000000006,11.77725;50.876340000000006,11.657580000000001;50.873850000000004,11.597240000000001;50.87642,11.52181;50.91109,11.416070000000001;50.9318,11.389030000000002;50.94877,11.19345;50.97299,11.13226;50.97289000000001,11.043080000000002;50.984880000000004,11.02978;");
        
        
        return trip;
    }

    public static Trip getTripFromWeimarToTrier()
    {
        Trip trip = new Trip();
        
        trip.setStartpoint("Weimar, Deutschland");
        trip.setLongStartpoint(WEIMAR.getLongitudeDegrees());
        trip.setLatStartpoint(WEIMAR.getLatitudeDegrees());
        
        trip.setEndpoint("Trier, Deutschland");
        trip.setLongEndpoint(TRIER.getLongitudeDegrees());
        trip.setLatEndpoint(TRIER.getLatitudeDegrees());
        
        trip.setOverViewPath("50.979490000000006,11.323540000000001;50.972260000000006,11.327810000000001;50.95237,11.303230000000001;50.950450000000004,11.228140000000002;50.89918,10.975610000000001;50.89296,10.896680000000002;50.879220000000004,10.798200000000001;50.887420000000006,10.76898;50.898340000000005,10.7491;50.904720000000005,10.67449;50.90634000000001,10.61195;50.91704000000001,10.57741;50.91998,10.550820000000002;50.942350000000005,10.48989;50.95342,10.485990000000001;50.967420000000004,10.489030000000001;50.9802,10.48243;50.989110000000004,10.46165;50.99871,10.41258;51.01191000000001,10.38475;51.01690000000001,10.3552;51.00564000000001,10.269860000000001;51.01117000000001,10.22165;51.011300000000006,10.15807;51.016760000000005,10.11747;50.98973,10.08323;50.97285,10.06858;50.95364000000001,9.98095;50.896550000000005,9.858920000000001;50.851980000000005,9.694870000000002;50.84780000000001,9.633420000000001;50.791360000000005,9.446570000000001;50.75668,9.313500000000001;50.711600000000004,9.154110000000001;50.714620000000004,9.1074;50.71717,9.083150000000002;50.680870000000006,9.03153;50.655330000000006,9.013060000000001;50.633190000000006,8.92646;50.611470000000004,8.82966;50.62888,8.792010000000001;50.62923000000001,8.76393;50.63503000000001,8.733270000000001;50.62144000000001,8.674750000000001;50.60157,8.65618;50.57582000000001,8.6461;50.566370000000006,8.58927;50.572120000000005,8.53632;50.558080000000004,8.45148;50.553290000000004,8.407290000000001;50.54433,8.35304;50.531110000000005,8.299230000000001;50.49889,8.190560000000001;50.436800000000005,8.09326;50.4091,8.076400000000001;50.404160000000005,8.01575;50.41109,7.9938;50.41255,7.97151;50.413830000000004,7.933230000000001;50.446270000000005,7.911150000000001;50.45459,7.885120000000001;50.449000000000005,7.85418;50.446000000000005,7.819730000000001;50.447230000000005,7.791010000000001;50.455180000000006,7.776660000000001;50.45825000000001,7.759720000000001;50.45100000000001,7.72299;50.446130000000004,7.685830000000001;50.444,7.661480000000001;50.41308,7.5883400000000005;50.37227000000001,7.510250000000001;50.341550000000005,7.437460000000001;50.327830000000006,7.396850000000001;50.32433,7.36943;50.315450000000006,7.330660000000001;50.31447000000001,7.298760000000001;50.293850000000006,7.256240000000001;50.24499,7.216590000000001;50.225660000000005,7.150410000000001;50.21746,7.125870000000001;50.220220000000005,7.109630000000001;50.231460000000006,7.092480000000001;50.238440000000004,7.0756000000000006;50.239630000000005,7.053070000000001;50.240610000000004,7.0383700000000005;50.229290000000006,7.008450000000001;50.20472,6.9682200000000005;50.188660000000006,6.909040000000001;50.13369,6.8598300000000005;50.097370000000005,6.867380000000001;50.07343,6.87527;50.06443,6.894970000000001;50.04625,6.913410000000001;50.0324,6.91441;50.02508,6.9354000000000005;49.998160000000006,6.928310000000001;49.930550000000004,6.871670000000001;49.901970000000006,6.8531200000000005;49.886540000000004,6.849990000000001;49.81223000000001,6.757250000000001;49.80668000000001,6.7243;49.768550000000005,6.64423;49.75128,6.628100000000001;49.749990000000004,6.6371400000000005;");
        
        
        return trip;
    }

    public static TripSearchCriteria getTripSearchFromBerlinToLeipzig(int maxDistance)
    {
        TripSearchCriteria tripSearchCriteria = new TripSearchCriteria();
        
        tripSearchCriteria.setStartPoint("Berlin, Germany");
        tripSearchCriteria.setLongStartPoint(BERLIN.getLongitudeDegrees());
        tripSearchCriteria.setLatStartPoint(BERLIN.getLatitudeDegrees());
        
        tripSearchCriteria.setEndPoint("Leipzig, Germany");
        tripSearchCriteria.setLongEndPoint(LEIPZIG.getLongitudeDegrees());
        tripSearchCriteria.setLatEndPoint(LEIPZIG.getLatitudeDegrees());
        
        tripSearchCriteria.setMaxDistance(maxDistance);
        
        return tripSearchCriteria;
    }

    public static TripSearchCriteria getTripSearchFromLeipzigToErfurt(int maxDistance)
    {
        TripSearchCriteria tripSearchCriteria = new TripSearchCriteria();        
        
        tripSearchCriteria.setStartPoint("Leipzig, Germany");
        tripSearchCriteria.setLongStartPoint(LEIPZIG.getLongitudeDegrees());
        tripSearchCriteria.setLatStartPoint(LEIPZIG.getLatitudeDegrees());
        
        tripSearchCriteria.setEndPoint("Erfurt, Germany");
        tripSearchCriteria.setLongEndPoint(ERFURT.getLongitudeDegrees());
        tripSearchCriteria.setLatEndPoint(ERFURT.getLatitudeDegrees());
        
        tripSearchCriteria.setMaxDistance(maxDistance);
        
        return tripSearchCriteria;
    }

    public static TripSearchCriteria getTripSearchFromWeimarToTrier(int maxDistance)
    {
        TripSearchCriteria tripSearchCriteria = new TripSearchCriteria();        
        
        tripSearchCriteria.setStartPoint("Weimar, Germany");
        tripSearchCriteria.setLongStartPoint(WEIMAR.getLongitudeDegrees());
        tripSearchCriteria.setLatStartPoint(WEIMAR.getLatitudeDegrees());
        
        tripSearchCriteria.setEndPoint("Trier, Germany");
        tripSearchCriteria.setLongEndPoint(TRIER.getLongitudeDegrees());
        tripSearchCriteria.setLatEndPoint(TRIER.getLatitudeDegrees());
        
        tripSearchCriteria.setMaxDistance(maxDistance);
        
        return tripSearchCriteria;
    }

    
}
